
function boasVindas() {
    const nome = prompt("Qual √© o seu nome?");
    if (nome && nome.trim() !== "") {
        const mensagem = `üéâ Ol√°, ${nome}! Seja bem-vindo(a) ao nosso sistema!`;
        mostrarResultado('boasVindasResult', mensagem, 'success');
    } else {
        mostrarResultado('boasVindasResult', '‚ùå Nome n√£o informado!', 'error');
    }
}


function mostrarTexto() {
    const texto = document.getElementById('textoInput').value;
    if (texto.trim() !== "") {
        mostrarResultado('textoResult', `üìù Texto digitado: "${texto}"`, 'highlight');
    } else {
        mostrarResultado('textoResult', '‚ùå Digite algo no campo de texto!', 'error');
    }
}

function somarValores() {
    const num1 = parseFloat(document.getElementById('num1').value);
    const num2 = parseFloat(document.getElementById('num2').value);
    
    if (!isNaN(num1) && !isNaN(num2)) {
        const soma = num1 + num2;
        const resultado = `üî¢ ${num1} + ${num2} = ${soma}`;
        mostrarResultado('somaResult', resultado, 'success');
    } else {
        mostrarResultado('somaResult', '‚ùå Digite dois n√∫meros v√°lidos!', 'error');
    }
}



function concatenarNumero() {
    const numero = document.getElementById('numConcat').value;
    if (numero !== "") {
        const resultado = `üîó N√∫mero concatenado: "O n√∫mero √© ${numero}"`;
        mostrarResultado('concatResult', resultado, 'highlight');
    } else {
        mostrarResultado('concatResult', '‚ùå Digite um n√∫mero!', 'error');
    }
}

// 3. Maioridade
function verificarMaioridade() {
    const idade = parseInt(document.getElementById('idade').value);
    
    if (!isNaN(idade) && idade > 0) {
        let resultado;
        if (idade >= 18) {
            resultado = `‚úÖ Voc√™ tem ${idade} anos e √© MAIOR de idade!`;
        } else {
            resultado = `üë∂ Voc√™ tem ${idade} anos e √© MENOR de idade!`;
        }
        mostrarResultado('maioridadeResult', resultado, 'success');
    } else {
        mostrarResultado('maioridadeResult', '‚ùå Digite uma idade v√°lida!', 'error');
    }
}

// ========================================
// FUN√á√ïES DE TEXTO
// ========================================

// 1. Manipulando Texto
function manipularTexto() {
    const frase = document.getElementById('frase').value;
    
    if (frase.trim() !== "") {
        const resultado = `üìù FRASE: "${frase}"

üî¢ Quantidade de caracteres: ${frase.length}
üî† Em mai√∫sculas: "${frase.toUpperCase()}"
üî° Em min√∫sculas: "${frase.toLowerCase()}"
üîÑ Substituindo "a" por "o": "${frase.replace(/a/g, 'o')}"
üîç Cont√©m a palavra "de": ${frase.toLowerCase().includes('de') ? 'Sim' : 'N√£o'}
üìç Caractere na posi√ß√£o 5: "${frase.charAt(5)}"`;
        
        mostrarResultado('textoManipuladoResult', resultado, 'highlight');
    } else {
        mostrarResultado('textoManipuladoResult', '‚ùå Digite uma frase!', 'error');
    }
}

// ========================================
// FUN√á√ïES MATEM√ÅTICAS
// ========================================

// Vari√°vel global para o jogo de adivinha√ß√£o
let numeroAleatorio = Math.floor(Math.random() * 10) + 1;

// 1. Adivinhar o n√∫mero
function adivinharNumero() {
    const palpite = parseInt(document.getElementById('palpite').value);
    
    if (!isNaN(palpite) && palpite >= 1 && palpite <= 10) {
        let resultado;
        if (palpite === numeroAleatorio) {
            resultado = `üéâ PARAB√âNS! Voc√™ acertou! O n√∫mero era ${numeroAleatorio}`;
            mostrarResultado('adivinharResult', resultado, 'success');
        } else if (palpite < numeroAleatorio) {
            resultado = `üìà Tente um n√∫mero MAIOR! Seu palpite: ${palpite}`;
            mostrarResultado('adivinharResult', resultado, 'highlight');
        } else {
            resultado = `üìâ Tente um n√∫mero MENOR! Seu palpite: ${palpite}`;
            mostrarResultado('adivinharResult', resultado, 'highlight');
        }
    } else {
        mostrarResultado('adivinharResult', '‚ùå Digite um n√∫mero entre 1 e 10!', 'error');
    }
}

// Gerar novo n√∫mero para o jogo
function gerarNovoNumero() {
    numeroAleatorio = Math.floor(Math.random() * 10) + 1;
    mostrarResultado('adivinharResult', 'üîÑ Novo n√∫mero gerado! Tente adivinhar!', 'highlight');
    document.getElementById('palpite').value = '';
}

// 2. Arredondando valores
function arredondarValores() {
    const decimal = parseFloat(document.getElementById('decimal').value);
    
    if (!isNaN(decimal)) {
        const resultado = `üî¢ N√∫mero: ${decimal}

‚¨ÜÔ∏è Arredondado para cima (ceil): ${Math.ceil(decimal)}
‚¨áÔ∏è Arredondado para baixo (floor): ${Math.floor(decimal)}
‚û°Ô∏è Arredondado normalmente (round): ${Math.round(decimal)}`;
        
        mostrarResultado('arredondarResult', resultado, 'highlight');
    } else {
        mostrarResultado('arredondarResult', '‚ùå Digite um n√∫mero decimal v√°lido!', 'error');
    }
}

// 3. Manipulando n√∫meros
function analisarNumeros() {
    // Gerar 10 n√∫meros aleat√≥rios entre 1 e 100
    const numeros = [];
    for (let i = 0; i < 10; i++) {
        numeros.push(Math.floor(Math.random() * 100) + 1);
    }
    
    const maior = Math.max(...numeros);
    const menor = Math.min(...numeros);
    
    const resultado = `üî¢ Sequ√™ncia de 10 n√∫meros: ${numeros.join(', ')}

üìä An√°lise:
   ‚Ä¢ Maior n√∫mero: ${maior}
   ‚Ä¢ Menor n√∫mero: ${menor}
   ‚Ä¢ Soma total: ${numeros.reduce((a, b) => a + b, 0)}
   ‚Ä¢ M√©dia: ${(numeros.reduce((a, b) => a + b, 0) / numeros.length).toFixed(2)}`;
    
    mostrarResultado('analiseResult', resultado, 'highlight');
}

// 4. Novos valores
function transformarNumero() {
    const numero = parseFloat(document.getElementById('numTransform').value);
    
    if (!isNaN(numero)) {
        const resultado = `üî¢ N√∫mero original: ${numero}

‚ú® Transforma√ß√µes:
   ‚Ä¢ Valor absoluto: ${Math.abs(numero)}
   ‚Ä¢ Elevado a 4: ${Math.pow(numero, 4)}
   ‚Ä¢ Raiz quadrada: ${Math.sqrt(numero).toFixed(4)}`;
        
        mostrarResultado('transformResult', resultado, 'highlight');
    } else {
        mostrarResultado('transformResult', '‚ùå Digite um n√∫mero v√°lido!', 'error');
    }
}

// ========================================
// DATAS
// ========================================

// 1. Mostrando a data
function mostrarData() {
    const agora = new Date();
    const dataFormatada = agora.toLocaleDateString('pt-BR', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
    
    const horaFormatada = agora.toLocaleTimeString('pt-BR');
    
    const resultado = `üìÖ Data atual: ${dataFormatada}
üïê Hora atual: ${horaFormatada}

üìä Detalhes:
   ‚Ä¢ Dia da semana: ${agora.toLocaleDateString('pt-BR', {weekday: 'long'})}
   ‚Ä¢ M√™s: ${agora.toLocaleDateString('pt-BR', {month: 'long'})}
   ‚Ä¢ Ano: ${agora.getFullYear()}
   ‚Ä¢ Dia: ${agora.getDate()}`;
    
    // Mostrar no console tamb√©m
    console.log('Data atual:', agora);
    console.log('Data formatada:', dataFormatada);
    
    mostrarResultado('dataResult', resultado, 'success');
}

// 2. Dia do anivers√°rio
function calcularAniversario() {
    const dataAniversario = document.getElementById('aniversario').value;
    
    if (dataAniversario) {
        const hoje = new Date();
        const aniversario = new Date(dataAniversario);
        
        // Definir o pr√≥ximo anivers√°rio
        const proximoAniversario = new Date(aniversario);
        proximoAniversario.setFullYear(hoje.getFullYear());
        
        // Se o anivers√°rio j√° passou este ano, calcular para o pr√≥ximo ano
        if (proximoAniversario < hoje) {
            proximoAniversario.setFullYear(hoje.getFullYear() + 1);
        }
        
        // Calcular diferen√ßa em milissegundos
        const diferenca = proximoAniversario - hoje;
        const diasRestantes = Math.ceil(diferenca / (1000 * 60 * 60 * 24));
        
        const resultado = `üéÇ Seu anivers√°rio: ${aniversario.toLocaleDateString('pt-BR')}
üìÖ Pr√≥ximo anivers√°rio: ${proximoAniversario.toLocaleDateString('pt-BR')}
‚è∞ Dias restantes: ${diasRestantes} dias`;
        
        mostrarResultado('aniversarioResult', resultado, 'success');
    } else {
        mostrarResultado('aniversarioResult', '‚ùå Selecione uma data de anivers√°rio!', 'error');
    }
}

// ========================================
// FUN√á√ÉO AUXILIAR PARA MOSTRAR RESULTADOS
// ========================================

function mostrarResultado(elementId, texto, tipo = 'highlight') {
    const elemento = document.getElementById(elementId);
    elemento.style.display = 'block';
    elemento.textContent = texto;
    
    // Remover classes anteriores
    elemento.className = 'result';
    
    // Adicionar classe de tipo
    if (tipo === 'success') {
        elemento.classList.add('success');
    } else if (tipo === 'error') {
        elemento.classList.add('error');
    } else {
        elemento.classList.add('highlight');
    }
}

// ========================================
// INICIALIZA√á√ÉO
// ========================================

// Definir data de hoje como valor padr√£o para o campo de anivers√°rio
document.addEventListener('DOMContentLoaded', function() {
    const hoje = new Date();
    const dataFormatada = hoje.toISOString().split('T')[0];
    document.getElementById('aniversario').value = dataFormatada;
    
    console.log('üéâ Aplica√ß√£o de Revis√£o JavaScript carregada com sucesso!');
    console.log('üìö Todos os exerc√≠cios est√£o funcionando!');
});